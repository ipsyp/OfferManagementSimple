<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AFM" xml:space="preserve">
    <value>Το Α.Φ.Μ του Προμηθευτή [Γίνεται έλεγχος εγκυρότητας του ΑΦΜ]</value>
  </data>
  <data name="AlternateContactEmail" xml:space="preserve">
    <value>Το e-mail του Αναπληρωτή Υπευθύνου του Προμηθευτή για τη δράση [έγκυρο e-mail, π.χ. myaccount@myisp.gr ]</value>
  </data>
  <data name="AlternateContactMobilePhone" xml:space="preserve">
    <value>Το κινητό τηλέφωνο του Αναπληρωτή Υπευθύνου του Προμηθευτή για τη δράση [πρέπει να ξεκινάει από 69 και να αποτελείται από 10 αριθμητικούς χαρακτήρες, χωρίς κενό]</value>
  </data>
  <data name="AlternateContactName" xml:space="preserve">
    <value>Το Ον/μο του Αναπληρωτή Υπευθύνου του Προμηθευτή για τη δράση  [ελεύθερο κείμενο, μέχρι 100 χαρακτήρες]</value>
  </data>
  <data name="AlternateContactPhone" xml:space="preserve">
    <value>Το σταθερό τηλέφωνο του Αναπληρωτή Υπευθύνου του Προμηθευτή για τη δράση [πρέπει να ξεκινάει από 2 και να αποτελείται από 10 αριθμητικούς χαρακτήρες, χωρίς κενό]</value>
  </data>
  <data name="ContactEmail" xml:space="preserve">
    <value>Το e-mail του Υπευθύνου του Προμηθευτή για τη δράση [έγκυρο e-mail, π.χ. myaccount@myisp.gr ]</value>
  </data>
  <data name="ContactMobilePhone" xml:space="preserve">
    <value>Το κινητό τηλέφωνο του Υπευθύνου του Προμηθευτή για τη δράση [πρέπει να ξεκινάει από 69 και να αποτελείται από 10 αριθμητικούς χαρακτήρες, χωρίς κενό]</value>
  </data>
  <data name="ContactName" xml:space="preserve">
    <value>Το Ον/μο του Υπευθύνου του Προμηθευτή για τη δράση  [ελεύθερο κείμενο, μέχρι 100 χαρακτήρες]</value>
  </data>
  <data name="ContactPhone" xml:space="preserve">
    <value>Το σταθερό τηλέφωνο του Υπευθύνου του Προμηθευτή για τη δράση [πρέπει να ξεκινάει από 2 και να αποτελείται από 10 αριθμητικούς χαρακτήρες, χωρίς κενό]</value>
  </data>
  <data name="LegalPersonEmail" xml:space="preserve">
    <value>Το e-mail του Νομίμου Εκπροσώπου του Προμηθευτή [έγκυρο e-mail, π.χ. myaccount@myisp.gr ]</value>
  </data>
  <data name="LegalPersonName" xml:space="preserve">
    <value>Το Ον/μο του Νομίμου Εκπροσώπου του Προμηθευτή [ελεύθερο κείμενο, μέχρι 100 χαρακτήρες]</value>
  </data>
  <data name="LegalPersonPhone" xml:space="preserve">
    <value>Το τηλέφωνο του Νομίμου Εκπροσώπου του Προμηθευτή [πρέπει να αποτελείται από ακριβώς 10 αριθμητικούς χαρακτήρες και να ξεκινάει από 2 (αν πρόκειται για σταθερό) ή από 69 (αν πρόκειται για κινητό)]</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Η πλήρης επωνυμία του Προμηθευτή [ελεύθερο κείμενο, μέχρι 500 χαρακτήρες]</value>
  </data>
  <data name="StoreEmail" xml:space="preserve">
    <value>Το e-mail επικοινωνίας με τον Προμηθευτή[έγκυρο e-mail, π.χ. myaccount@myisp.gr ]</value>
  </data>
  <data name="StoreFax" xml:space="preserve">
    <value>Το Fax επικοινωνίας με τον Προμηθευτή [πρέπει να ξεκινάει από 2 και να αποτελείται από 10 αριθμητικούς χαρακτήρες, χωρίς κενό]</value>
  </data>
  <data name="StoreMobilePhone" xml:space="preserve">
    <value>Το κινητό τηλέφωνο επικοινωνίας με τον Προμηθευτή [πρέπει να ξεκινάει από 69 και να αποτελείται από 10 αριθμητικούς χαρακτήρες, χωρίς κενό]</value>
  </data>
  <data name="StorePhone" xml:space="preserve">
    <value>Το σταθερό τηλέφωνο επικοινωνίας με τον Προμηθευτή [πρέπει να ξεκινάει από 2 ή 800 ή 801 και να αποτελείται από 10 αριθμητικούς χαρακτήρες ή να είναι πενταψήφιο ή τετραψήφιο νούμερο, χωρίς κενά]</value>
  </data>
  <data name="StoreURL" xml:space="preserve">
    <value>Το URL της ιστοσελίδας του Προμηθευτή [έγκυρη διεύθυνση ιστοσελίδας, π.χ. http://www.mypage.gr]</value>
  </data>
  <data name="TradeName" xml:space="preserve">
    <value>Ο Διακριτικός Τίτλος του Προμηθευτή [ελεύθερο κείμενο, μέχρι 500 χαρακτήρες]</value>
  </data>
</root>